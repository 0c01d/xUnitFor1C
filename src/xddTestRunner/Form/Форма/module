
// { События формы
Процедура ПриОткрытии()
	ЗагрузитьПлагины();
	ОбновитьКнопкиИсторииЗагрузкиТестов();
	
	ПерезагрузитьПоследниеТестыПоИстории();
	
	ЭтаФорма.Заголовок = ЭтотОбъект.ЗаголовокФормы();
КонецПроцедуры

Процедура ПриЗакрытии()
	ЭтотОбъект.СохранитьНастройки();
КонецПроцедуры
// } События формы

// { Управляющие воздействия пользователя
Процедура КнопкаВыполнитьВсеТестыНажатие(Элемент)
	ВыполнитьТестыНаКлиенте();
КонецПроцедуры

Процедура ВыполнитьТестыНаКлиенте(Фильтр = Неопределено)
	Если ЗначениеЗаполнено(ЭтаФорма.ДеревоОтЗагрузчика) Тогда
		ОчиститьСообщения();
		
		РезультатыТестирования = ВыполнитьТесты(ЭтаФорма.Загрузчик, ЭтаФорма.ДеревоОтЗагрузчика, Фильтр);
		
		ОбновитьДеревоТестовНаОснованииРезультатовТестирования(ДеревоТестов.Строки[0], РезультатыТестирования);
		
		ГенераторОтчетаMXL = Плагин("ГенераторОтчетаMXL");
		Отчет = ГенераторОтчетаMXL.СоздатьОтчет(ЭтаФорма, РезультатыТестирования);
		ГенераторОтчетаMXL.Показать(Отчет);
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаВыполнитьВыделенныеТестыНажатие(Элемент)
	Фильтр = Новый Массив;
	ВыделенныеСтроки = ЭлементыФормы.ДеревоТестов.ВыделенныеСтроки;
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Фильтр.Добавить(Новый УникальныйИдентификатор(ВыделеннаяСтрока.Ключ));
	КонецЦикла;
	Если Фильтр.Количество() > 0 Тогда
		ВыполнитьТестыНаКлиенте(Фильтр);
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаЗагрузитьТестыНажатие(Элемент)
	ЗагрузчикПоУмолчанию = ЭтотОбъект.ЗагрузчикПоУмолчанию();
	ИдентификаторЗагрузчикаПоУмолчанию = ЗагрузчикПоУмолчанию.ОписаниеПлагина(ЭтотОбъект.ТипыПлагинов).Идентификатор;
	Подключаемый_ИнтерактивныйВызовЗагрузчика(Новый Структура("Имя", ИдентификаторЗагрузчикаПоУмолчанию));
КонецПроцедуры

Процедура КнопкаПерезагрузитьПерезагрузитьБраузерТестирования(Кнопка)
	Для каждого МетаФорма Из ЭтаФорма.Метаданные().Формы Цикл
		ТекФорма = ПолучитьФорму(МетаФорма); // может возвращать неопределено, если есть управляемая форма
		Если ТекФорма <> Неопределено И ТекФорма.Открыта() Тогда
			ТекФорма.Закрыть();
			Если ТекФорма = ЭтаФорма Тогда
				НайденноеИмяФайла = Неопределено;
				Выполнить("НайденноеИмяФайла = ЭтотОбъект.ИспользуемоеИмяФайла;");
				ВнешниеОбработки.Создать(НайденноеИмяФайла).ПолучитьФорму(МетаФорма.Имя).Открыть();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПерезагрузитьПоследниеТестыПоИстории(Элемент = Неопределено)
	ИсторияЗагрузкиТестов = ЭтотОбъект.Настройки.ИсторияЗагрузкиТестов;
	Если ИсторияЗагрузкиТестов.Количество() > 0 Тогда
		ЭлементИстории = ИсторияЗагрузкиТестов[0];
		Попытка
			ЗагрузитьТесты(ЭлементИстории.ИдентификаторЗагрузчика, ЭлементИстории.Путь);
		Исключение
			// TODO
			Сообщить("Не удалось загрузить тесты из истории <" + ЭлементИстории.ИдентификаторЗагрузчика + ": " + ЭлементИстории.Путь + ">" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
// } Управляющие воздействия пользователя

// { Плагины
Процедура ЗагрузитьПлагины()
	ЭтотОбъект.Плагины = Новый Структура;
	
	Файл = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	КаталогПлагинов = Файл.Путь + "\Plugins";
	НайденныеФайлы = НайтиФайлы(КаталогПлагинов, "*.epf", Ложь);
	Для каждого ФайлОбработки Из НайденныеФайлы Цикл
		Обработка = ВнешниеОбработки.Создать(ФайлОбработки.ПолноеИмя);
		Попытка
			ОписаниеПлагина = Обработка.ОписаниеПлагина(ЭтотОбъект.ТипыПлагинов);
			ЭтотОбъект.Плагины.Вставить(ОписаниеПлагина.Идентификатор, Обработка);
		Исключение
			Ошибка = ОписаниеОшибки();
			Сообщить(Ошибка);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
	ДобавитьКомандыЗагрузчиковНаФорме();
КонецПроцедуры

Процедура ДобавитьКомандыЗагрузчиковНаФорме()
	ОписанияЗагрузчиков = ЭтотОбъект.ПолучитьОписанияПлагиновПоТипу(ЭтотОбъект.ТипыПлагинов.Загрузчик);
	Меню = ЭлементыФормы.КнопкаЗагрузитьТесты.Кнопки;
	
	ИндексКнопки = 0;
	Для каждого ОписаниеПлагина Из ОписанияЗагрузчиков Цикл
		НоваяКнопка = Меню.Вставить(ИндексКнопки, ОписаниеПлагина.Идентификатор, ТипКнопкиКоманднойПанели.Действие, ОписаниеПлагина.Представление, Новый Действие("Подключаемый_ИнтерактивныйВызовЗагрузчика"));
		ИндексКнопки = ИндексКнопки + 1;
	КонецЦикла;
	НоваяКнопка = Меню.Вставить(ИндексКнопки, "", ТипКнопкиКоманднойПанели.Разделитель);
КонецПроцедуры
// } Плагины

// { Работа с деревом тестов
Процедура Подключаемый_ИнтерактивныйВызовЗагрузчика(Кнопка)
	ИдентификаторЗагрузчика = Кнопка.Имя;
	Путь = ЭтотОбъект.Плагин(ИдентификаторЗагрузчика).ВыбратьПутьИнтерактивно();
	Если ЗначениеЗаполнено(Путь) Тогда
		ЗагрузитьТесты(ИдентификаторЗагрузчика, Путь);
	КонецЕсли;
КонецПроцедуры 

Процедура ЗагрузитьТесты(ИдентификаторЗагрузчика, Путь)
	ЭтаФорма.Загрузчик = ЭтотОбъект.Плагин(ИдентификаторЗагрузчика);
	ЭтаФорма.ДеревоОтЗагрузчика = ЭтаФорма.Загрузчик.Загрузить(ЭтотОбъект, Путь);
	
	ДеревоТестов.Строки.Очистить();
	ЗаполнитьДеревоТестов(ДеревоТестов, ДеревоОтЗагрузчика);
	
	КоличествоТестовыхСлучаев = ЗаполнитьКоличествоТестовыхСлучаевПоВсемуДеревуТестов(ДеревоТестов);
	РазвернутьСтрокиДерева(КоличествоТестовыхСлучаев < 30);
	
	ЭтотОбъект.СохранитьВИсториюЗагрузкиТестов(ИдентификаторЗагрузчика, Путь);
	ОбновитьКнопкиИсторииЗагрузкиТестов();
КонецПроцедуры

Процедура ЗаполнитьДеревоТестов(РодительскаяСтрокаДереваТестов, КонтейнерДереваТестовЗагрузчика)
	СтрокаКонтейнера = РодительскаяСтрокаДереваТестов.Строки.Добавить();
	СтрокаКонтейнера.Имя = КонтейнерДереваТестовЗагрузчика.Имя;
	СтрокаКонтейнера.ИконкаУзла = КонтейнерДереваТестовЗагрузчика.ИконкаУзла;
	СтрокаКонтейнера.Ключ = КонтейнерДереваТестовЗагрузчика.Ключ;
	
	ТипыУзловДереваТестов = ЭтотОбъект.Плагин("ПостроительДереваТестов").ТипыУзловДереваТестов;
	Для каждого ЭлементКоллекции Из КонтейнерДереваТестовЗагрузчика.Строки Цикл
		Если ЭлементКоллекции.Тип = ТипыУзловДереваТестов.Контейнер Тогда
			ЗаполнитьДеревоТестов(СтрокаКонтейнера, ЭлементКоллекции);
		ИначеЕсли ЭлементКоллекции.Тип = ТипыУзловДереваТестов.Элемент Тогда
			СтрокаЭлемента = СтрокаКонтейнера.Строки.Добавить();
			СтрокаЭлемента.Имя = ЭлементКоллекции.ИмяМетода;
			СтрокаЭлемента.Путь = ЭлементКоллекции.Путь;
			СтрокаЭлемента.ИконкаУзла = ЭлементКоллекции.ИконкаУзла;
			СтрокаЭлемента.Ключ = ЭлементКоллекции.Ключ;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ЗаполнитьКоличествоТестовыхСлучаевПоВсемуДеревуТестов(РодительскаяСтрока)
	КоллекцияСтрок = РодительскаяСтрока.Строки;
	Если КоллекцияСтрок.Количество() = 0 Тогда
		Возврат 1;
	КонецЕсли;
	ОбщееКоличествоТестов = 0;
	Для каждого СтрокаДерева из коллекцияСтрок Цикл
		КоличествоТестовВСтроке = ЗаполнитьКоличествоТестовыхСлучаевПоВсемуДеревуТестов(СтрокаДерева);
		СтрокаДерева.КоличествоТестов = КоличествоТестовВСтроке;
        ОбщееКоличествоТестов = ОбщееКоличествоТестов + КоличествоТестовВСтроке;
	КонецЦикла;
	
	Возврат ОбщееКоличествоТестов;
КонецФункции

Процедура РазвернутьСтрокиДерева(ВключаяПодчиненные = Ложь)
	Для каждого СтрокаДерева из ДеревоТестов.Строки Цикл
		ЭлементыФормы.ДеревоТестов.Развернуть(СтрокаДерева, ВключаяПодчиненные);
	КонецЦикла;
КонецПроцедуры

Процедура ОбновитьДеревоТестовНаОснованииРезультатовТестирования(УзелДереваТестов, РезультатТестирования)
	ТипыУзловДереваТестов = ЭтотОбъект.Плагин("ПостроительДереваТестов").ТипыУзловДереваТестов;
	УзелДереваТестов.Состояние = РезультатТестирования.Состояние;
	УзелДереваТестов.ВремяВыполнения = РезультатТестирования.ВремяВыполнения;
	Если РезультатТестирования.Тип = ТипыУзловДереваТестов.Контейнер Тогда
		Для каждого ДочернийРезультатТестирования Из РезультатТестирования.Строки Цикл
			ДочернийУзелДереваТестов = УзелДереваТестов.Строки.Найти(Строка(ДочернийРезультатТестирования.Ключ), "Ключ");
			ОбновитьДеревоТестовНаОснованииРезультатовТестирования(ДочернийУзелДереваТестов, ДочернийРезультатТестирования);
		КонецЦикла;
	ИначеЕсли РезультатТестирования.Тип = ТипыУзловДереваТестов.Элемент Тогда
		Если РезультатТестирования.Свойство("Сообщение") И ЗначениеЗаполнено(РезультатТестирования.Сообщение) Тогда
			Сообщить(РезультатТестирования.Сообщение, СтатусСообщения.ОченьВажное);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
// } Работа с деревом тестов

// { История загрузки тестов
Процедура ОбновитьКнопкиИсторииЗагрузкиТестов()
	ИсторияЗагрузкиТестов = ЭтотОбъект.Настройки.ИсторияЗагрузкиТестов;
	МенюИсторияЗагрузкиТестов = ЭтаФорма.ЭлементыФормы.КнопкаЗагрузитьТесты.Кнопки.ИсторияЗагрузкиТестов.Кнопки;
	Для Сч = 0 По ИсторияЗагрузкиТестов.Количество() - 1 Цикл
		ИмяКнопки = "История_" + Сч;
		ЭлементИстории = ИсторияЗагрузкиТестов[Сч];
		ТекстКнопки = ЭлементИстории.ИдентификаторЗагрузчика + ": " + ЭлементИстории.Путь;
		Кнопка = МенюИсторияЗагрузкиТестов.Найти(ИмяКнопки);
		Если Кнопка = Неопределено Тогда
			Кнопка = МенюИсторияЗагрузкиТестов.Добавить(ИмяКнопки, ТипКнопкиКоманднойПанели.Действие, , Новый Действие("Подключаемый_ЗагрузитьТестыИзИстории"));
		КонецЕсли;
		Кнопка.Текст = ТекстКнопки;
	КонецЦикла;
КонецПроцедуры

Процедура Подключаемый_ЗагрузитьТестыИзИстории(Кнопка)
	ИндексИстории = Число(Сред(Кнопка.Имя, Найти(Кнопка.Имя, "_") + 1));
	ИсторияЗагрузкиТестов = ЭтотОбъект.Настройки.ИсторияЗагрузкиТестов;
	ЭлементИстории = ИсторияЗагрузкиТестов[ИндексИстории];
	ЗагрузитьТесты(ЭлементИстории.ИдентификаторЗагрузчика, ЭлементИстории.Путь);
КонецПроцедуры
// } История загрузки тестов
