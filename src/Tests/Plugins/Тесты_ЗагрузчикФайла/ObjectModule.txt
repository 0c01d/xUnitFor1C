Перем КонтекстЯдра;
Перем Утверждения;
Перем Ожидаем;
Перем ЗагрузчикФайла;
Перем ВременныеФайлы;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Функция ПолучитьСписокТестов() Экспорт
	ВсеТесты = Новый Массив;
	// Loader interface
	ВсеТесты.Добавить("ТестДолжен_Загрузить_ОдинФайл");
	ВсеТесты.Добавить("ТестДолжен_Загрузить_ДваФайла");
	
	// Проверка работы старго интерфейса объявления параметризованных тестов
	ВсеТесты.Добавить(Новый Структура("ИмяТеста", "ТестДолжен_ПроверитьОписаниеТестаЧерезСтруктуру_ЗаполненоТолькоИмяТеста"));
	ВсеТесты.Добавить(Новый Структура("ПредставлениеТеста, ИмяТеста", "", "ТестДолжен_ПроверитьОписаниеТестаЧерезСтруктуру_ЗаполненоИмяИПредставлениеТеста"));
	ВсеТесты.Добавить(Новый Структура("ПредставлениеТеста, ИмяТеста, Параметр", "Тест с параметрами должен сложить 7 и 5", "ТестСПараметрамиДолжен_ВыполнитьСложениеПереданныхЗначенийИСверитьСРезультатом", Новый Структура("Знач1, Знач2, Результат", 7, 5, 12)));
	ВсеТесты.Добавить(Новый Структура("ПредставлениеТеста, ИмяТеста, Параметр", "Тест с параметрами должен сложить ""А"" и ""Б""", "ТестСПараметрамиДолжен_ВыполнитьСложениеПереданныхЗначенийИСверитьСРезультатом", Новый Структура("Знач1, Знач2, Результат", "А", "Б", "АБ")));
	
	Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	ВременныеФайлы = Новый Массив;
	ЗагрузчикФайла = КонтекстЯдра.Плагин("ЗагрузчикФайла");
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	ЗагрузчикФайла = Неопределено;
	УдалитьВременныеФайлы();
КонецПроцедуры

// { Helpers
Функция НовыйВременныйФайл(Расширение) Экспорт
	ВременныйФайл = Новый Файл(ПолучитьИмяВременногоФайла(Расширение));
	ВременныеФайлы.Добавить(ВременныйФайл);
	
	Возврат ВременныйФайл;
КонецФункции 

Процедура УдалитьВременныеФайлы()
	Для каждого ВременныйФайл Из ВременныеФайлы Цикл
		Попытка
			УдалитьФайлы(ВременныйФайл.ПолноеИмя);
		Исключение
			Сообщить("Не удален временный файл: " + ВременныйФайл.ПолноеИмя + "
			|-" + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ВременныеФайлы.Очистить();
КонецПроцедуры
// } Helpers

// { Loader interface
Процедура ТестДолжен_Загрузить_ОдинФайл() Экспорт
	ФайлСТестами = НовыйВременныйФайл(".epf");
	ЭтотОбъект.ПолучитьМакет("ТестовыйНаборДляЗагрузчикаФС").Записать(ФайлСТестами.ПолноеИмя);
	
	ДеревоТестов = ЗагрузчикФайла.Загрузить(КонтекстЯдра, ФайлСТестами.ПолноеИмя);
	
	Ожидаем.Что(ДеревоТестов, "ДеревоТестов").ИмеетТип("Структура");
	Ожидаем.Что(ДеревоТестов.Строки, "Узлы верхнего уровня").ИмеетДлину(1);
	
	Контейнер = ДеревоТестов.Строки[0];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами);
КонецПроцедуры

Процедура ПроверитьКонтейнер(Контейнер, ФайлСТестами)
	ТипыУзловДереваТестов = КонтекстЯдра.Плагин("ПостроительДереваТестов").ТипыУзловДереваТестов;
	
	Ожидаем.Что(Контейнер.Тип, "Контейнер.Тип").Равно(ТипыУзловДереваТестов.Контейнер);
	Ожидаем.Что(Контейнер.Имя, "Контейнер.Имя").Равно(ФайлСТестами.ИмяБезРасширения);
	Ожидаем.Что(Контейнер.Строки, "Контейнер.Строки").ИмеетТип("Массив").ИмеетДлину(3);
	
	Элемент1 = Контейнер.Строки[0];
	Ожидаем.Что(Элемент1.Тип, "Элемент1.Тип").Равно(ТипыУзловДереваТестов.Элемент);
	Ожидаем.Что(Элемент1.Путь, "Элемент1.Путь").Равно(ФайлСТестами.ПолноеИмя);
	Ожидаем.Что(Элемент1.ИмяМетода, "Элемент1.ИмяМетода").Равно("УспешныйТест");
	
	Элемент2 = Контейнер.Строки[1];
	Ожидаем.Что(Элемент2.Тип, "Элемент2.Тип").Равно(ТипыУзловДереваТестов.Элемент);
	Ожидаем.Что(Элемент2.Путь, "Элемент2.Путь").Равно(ФайлСТестами.ПолноеИмя);
	Ожидаем.Что(Элемент2.ИмяМетода, "Элемент2.ИмяМетода").Равно("ПроваленныйТест");
	
	Элемент3 = Контейнер.Строки[2];
	Ожидаем.Что(Элемент3.Тип, "Элемент3.Тип").Равно(ТипыУзловДереваТестов.Элемент);
	Ожидаем.Что(Элемент3.Путь, "Элемент3.Путь").Равно(ФайлСТестами.ПолноеИмя);
	Ожидаем.Что(Элемент3.ИмяМетода, "Элемент3.ИмяМетода").Равно("НесуществующийТест");
КонецПроцедуры

Процедура ТестДолжен_Загрузить_ДваФайла() Экспорт
	ФайлСТестами1 = НовыйВременныйФайл(".epf");
	ЭтотОбъект.ПолучитьМакет("ТестовыйНаборДляЗагрузчикаФС").Записать(ФайлСТестами1.ПолноеИмя);
	
	ФайлСТестами2 = НовыйВременныйФайл(".epf");
	ЭтотОбъект.ПолучитьМакет("ТестовыйНаборДляЗагрузчикаФС").Записать(ФайлСТестами2.ПолноеИмя);
	
	ПутьКНесколькимФайлам = ФайлСТестами1.ПолноеИмя + Символы.ПС + ФайлСТестами2.ПолноеИмя;
	
	ДеревоТестов = ЗагрузчикФайла.Загрузить(КонтекстЯдра, ПутьКНесколькимФайлам);
	
	Ожидаем.Что(ДеревоТестов, "ДеревоТестов").ИмеетТип("Структура");
	Ожидаем.Что(ДеревоТестов.Строки, "Количество узлов верхнего уровня").ИмеетДлину(2);
	
	Контейнер = ДеревоТестов.Строки[0];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами1);
	
	Контейнер = ДеревоТестов.Строки[1];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами2);
КонецПроцедуры
// } Loader interface

// { Проверка работы старго интерфейса объявления параметризованных тестов
Процедура ТестДолжен_ПроверитьОписаниеТестаЧерезСтруктуру_ЗаполненоТолькоИмяТеста() Экспорт
	// Визуальный контроль в дереве тестов
КонецПроцедуры

Процедура ТестДолжен_ПроверитьОписаниеТестаЧерезСтруктуру_ЗаполненоИмяИПредставлениеТеста() Экспорт
	// Визуальный контроль в дереве тестов
КонецПроцедуры

Процедура ТестСПараметрамиДолжен_ВыполнитьСложениеПереданныхЗначенийИСверитьСРезультатом(Параметр) Экспорт
	Ожидаем.Что(Параметр).ИмеетТип("Структура");
	Ожидаем.Что(Параметр.Знач1 + Параметр.Знач2).Равно(Параметр.Результат);
КонецПроцедуры
// } Проверка работы старго интерфейса объявления параметризованных тестов
