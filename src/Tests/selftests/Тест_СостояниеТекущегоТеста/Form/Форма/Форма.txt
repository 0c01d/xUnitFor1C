&НаКлиенте
Перем ЮТест;  // для тестирования

//{ основная процедура для юнит-тестирования xUnitFor1C
&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПолучитьДанныеТекущегоТеста");
	ВсеТесты.Добавить("ТестДолжен_ПолучитьДанныеТекущегоТеста_Тест2");

	Возврат ВсеТесты;	
КонецФункции
//}

//{ Основной блок

//} конец основного блока

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПолучитьДанныеТекущегоТеста() Экспорт
	ДанныеТекущегоТеста = юТест.ДанныеТекущегоТеста();
	ЮТест.ПроверитьРавенство("ТестДолжен_ПолучитьДанныеТекущегоТеста", ДанныеТекущегоТеста.Имя, "ТестДолжен_ПолучитьДанныеТекущегоТеста, ДанныеТекущегоТеста.Имя");
	
	Файл = Новый Файл(ДанныеТекущегоТеста.ПолныйПуть);
	ЮТест.Проверить(Файл.Существует(), "Файл.Существует()");
	ЮТест.ПроверитьРавенство("Тест_СостояниеТекущегоТеста", Файл.ИмяБезРасширения, "ДанныеТекущегоТеста.Имя, Файл.ИмяБезРасширения");
	Сообщить("Файл.ПолноеИмя = <"+?(Файл.ПолноеИмя = Неопределено, "Неопределено", Файл.ПолноеИмя)+">"); 
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПолучитьДанныеТекущегоТеста_Тест2() Экспорт
	ДанныеТекущегоТеста = юТест.ДанныеТекущегоТеста();
	ЮТест.ПроверитьРавенство("ТестДолжен_ПолучитьДанныеТекущегоТеста_Тест2", ДанныеТекущегоТеста.Имя, "ТестДолжен_ПолучитьДанныеТекущегоТеста_Тест2, ДанныеТекущегоТеста.Имя");
	
	Файл = Новый Файл(ДанныеТекущегоТеста.ПолныйПуть);
	ЮТест.Проверить(Файл.Существует(), "Файл.Существует()");
	ЮТест.ПроверитьРавенство("Тест_СостояниеТекущегоТеста", Файл.ИмяБезРасширения, "ДанныеТекущегоТеста.Имя, Файл.ИмяБезРасширения");
	Сообщить("Файл.ПолноеИмя = <"+?(Файл.ПолноеИмя = Неопределено, "Неопределено", Файл.ПолноеИмя)+">"); 
КонецПроцедуры

//} конец блока юнит-тестов
