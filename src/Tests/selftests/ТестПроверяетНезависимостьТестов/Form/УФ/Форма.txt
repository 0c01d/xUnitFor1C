&НаКлиенте
Перем ГлобПерем; // для тестирования

&НаКлиенте
Перем ЮТест;  // для тестирования

//{ основная процедура для юнит-тестирования 1CUnit
&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеПеременной");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеПеременной");
	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеОбработки");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеОбработки");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ Основной блок

//} конец основного блока

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ИзменитьСостояниеПеременной() Экспорт
	ЮТест.ПроверитьРавенство(1, ГлобПерем, "Начальное состояние не заполнено");
	ГлобПерем = 2;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СравнитьСостояниеПеременной() Экспорт
	ЮТест.ПроверитьРавенство(1, ГлобПерем, "Не выполнено условие 1 != ГлобПерем - тесты являются зависимыми");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ИзменитьСостояниеОбработки() Экспорт
	ЮТест.ПроверитьРавенство(1, Объект.Состояние, "Начальное состояние не заполнено");
	Объект.Состояние = 2;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СравнитьСостояниеОбработки() Экспорт
	ЮТест.ПроверитьРавенство(1, Объект.Состояние, "Не выполнено условие 1 != Состояние - тесты являются зависимыми");
КонецПроцедуры

ГлобПерем = 1;
Объект.Состояние = 1;
//} конец блока юнит-тестов
