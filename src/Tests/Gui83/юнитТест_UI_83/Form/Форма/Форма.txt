#Если Не ВебКлиент Тогда

&НаКлиенте
Перем юТест;

&НаКлиенте
Перем массивТестовыхПриложений;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	СисИнфо = Новый СистемнаяИнформация;

	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
		 
	Если СисИнфо.ВерсияПриложения < "8.3.0.0" Тогда
		Возврат ВсеТесты;
	КонецЕсли;

	ВсеТесты.Добавить("Тест_ГУИ_83");
	ВсеТесты.Добавить("Тест_ГУИ_83_ДваПриложения");

	Возврат ВсеТесты;
	
КонецФункции

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
	юТест.ВывестиСообщение("Перед запуском теста");
	массивТестовыхПриложений = Новый Массив;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	юТест.ВывестиСообщение("После запуска теста");
	ЗавершитьВсеСеансыРаботыСТестовымиПриложениями();
КонецПроцедуры

&НаКлиенте
Процедура Тест_ГУИ_83() Экспорт
	//Предупреждение(массивТестовыхПриложений.Количество(), 1);
	имяПользователя = "Роль1";
	Пароль = "";
	Порт = 1577;
	ТаймаутОжиданияПриложенияВСекундах = 20;
	
	тестовоеПриложение = ЗапуститьТестовоеПриложение(имяПользователя, Пароль, Порт, ТаймаутОжиданияПриложенияВСекундах);
	
	ТестовыйСценарий_25_09_2013(тестовоеПриложение);

КонецПроцедуры

&НаКлиенте
Процедура Тест_ГУИ_83_ДваПриложения() Экспорт
	//Предупреждение(массивТестовыхПриложений.Количество(), 1);
	имяПользователя = "Роль1";
	Пароль = "";
	Порт = 1577;
	ТаймаутОжиданияПриложенияВСекундах = 20;
	
	//имяПользователя2 = "Роль2";
	Порт2 = Порт + 1;
	
	тестовоеПриложение = ЗапуститьТестовоеПриложение(имяПользователя, Пароль, Порт, ТаймаутОжиданияПриложенияВСекундах);
	тестовоеПриложение2 = ЗапуститьТестовоеПриложение(имяПользователя, Пароль, Порт2, ТаймаутОжиданияПриложенияВСекундах);
	
	ТестовыйСценарий_25_09_2013(тестовоеПриложение);
	ТестовыйСценарий_25_09_2013(тестовоеПриложение2);
	
КонецПроцедуры

&НаКлиенте
Функция ЗапуститьТестовоеПриложение(ИмяПользователя, Пароль, Порт, ТаймаутОжиданияПриложенияВСекундах)
	Перем тестовоеПриложение;
	строкаЗапуска = ПолучитьСтрокуЗапуска(ИмяПользователя, Пароль, Порт);
	//Предупреждение("строкаЗапуска "+Символы.ПС+строкаЗапуска, 3);
	//Предупреждение("Порт "+Порт);
 	ЗапуститьПриложение(строкаЗапуска);
	тестовоеПриложение = Неопределено;
	Выполнить("тестовоеПриложение = Новый ТестируемоеПриложение(, XMLСтрока(Порт));");

	Подключен = Ложь;
	ВремяОкончанияОжидания = ТекущаяДата() + ТаймаутОжиданияПриложенияВСекундах; //60;
	ОписаниеОшибкиСоединения = "";
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		Попытка
			тестовоеПриложение.УстановитьСоединение();
			Подключен = Истина;
			Прервать;
		Исключение
			ОписаниеОшибкиСоединения = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;

	сообщениеОшибки = "Не смогли установить соединение с тестовым приложением для пользователя "+ИмяПользователя+" !" + Символы.ПС + ОписаниеОшибкиСоединения; 
		//юТест.ПроверитьИстину(Подключен, сообщениеОшибки);
	Если Не Подключен Тогда 
    	тестовоеПриложение = Неопределено;
		ВызватьИсключение сообщениеОшибки;
	КонецЕсли;
	
	массивТестовыхПриложений.Добавить(тестовоеПриложение);

	Возврат тестовоеПриложение;
КонецФункции

&НаКлиенте
Процедура ЗавершитьВсеСеансыРаботыСТестовымиПриложениями()
	Если массивТестовыхПриложений.Количество() <> 0 Тогда
		Для Каждого Подопытный Из массивТестовыхПриложений Цикл
			Подопытный.РазорватьСоединение();
		КонецЦикла;	

		ЗавершитьВсеТестовыеПриложенияПринудительно();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВсеТестовыеПриложенияПринудительно()
		юТест.ПроверитьЗаполненность(массивТестовыхПриложений.Количество(), "массивТестовыхПриложений.Количество()");

	Scr = Новый COMОбъект("MSScriptControl.ScriptControl");
	Scr.Language = "vbscript";
	Scr.AddCode("
		|Option Explicit
		|
		|Dim objWMIService, objProcess, colProcess
		|
		|Set objWMIService = GetObject(""winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2"") 
		|
		|Set colProcess = objWMIService.ExecQuery(""Select * from Win32_Process Where (CommandLine Like '%/TESTCLIENT%' And ExecutablePath Like '%1cv8c%')"")
		|
		|For Each objProcess in colProcess
		|	objProcess.Terminate()
		|Next
		|");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуЗапуска(ИмяПользователя = "", Пароль = "", Порт = "")
		//Если Не ЗначениеЗаполнено(ИмяПользователя) Тогда
		//	ИмяПользователя = "Администратор";
		//КонецЕсли;	
	
	Результат = КаталогПрограммы() + "1cv8c.exe ENTERPRISE " +
		"/IBConnectionString""" + СтрЗаменить(СтрокаСоединенияИнформационнойБазы(), """", """""") + """" +
		"/N""" + ИмяПользователя + """" + "/P""" + Пароль + """" +  
		" /TESTCLIENT -TPort" + XMLСтрока(Порт);

	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ТестовыйСценарий_25_09_2013(ТестовоеПриложение)

	ОкноПриложенияОсновноеВыполнитьКоманду(ТестовоеПриложение);
	ОкноПриложенияПоказатьГУИДЗакрыть(ТестовоеПриложение);
	ОкноПриложенияОсновноеВыполнитьКоманду1(ТестовоеПриложение);
	ОкноПриложенияПоказатьГУИДЗакрыть1(ТестовоеПриложение);
	ОкноПриложенияОсновноеФормаПростойСправочникАктивизировать(ТестовоеПриложение);

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияОсновноеВыполнитьКоманду(ТестовоеПриложение)
	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/command/Обработка.xddGuidShow.Команда.Открыть");

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияПоказатьГУИДЗакрыть(ТестовоеПриложение)

	ОкноПриложенияПоказатьГУИД = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Показать ГУИД", , 30);
	ОкноПриложенияПоказатьГУИД.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияОсновноеВыполнитьКоманду1(ТестовоеПриложение)

	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/command/Справочник.ПростойСправочник.Команда.ОткрытьСписок");

	ОкноПриложенияОсновное.ВыполнитьКоманду("e1cib/command/Обработка.xddGuidShow.Команда.Открыть");

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияПоказатьГУИДЗакрыть1(ТестовоеПриложение)

	ОкноПриложенияПоказатьГУИД = ТестовоеПриложение.НайтиОбъект(Тип("ТестируемоеОкноКлиентскогоПриложения"), "Показать ГУИД", , 30);
	ОкноПриложенияПоказатьГУИД.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ОкноПриложенияОсновноеФормаПростойСправочникАктивизировать(ТестовоеПриложение)

	
	ОкноПриложенияОсновное = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ОкноПриложенияОсновное = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ОкноПриложенияОсновноеФормаПростойСправочник = ОкноПриложенияОсновное.НайтиОбъект(Тип("ТестируемаяФорма"), "Простой справочник");
	ОкноПриложенияОсновноеФормаПростойСправочник.Активизировать();

КонецПроцедуры

#КонецЕсли 
