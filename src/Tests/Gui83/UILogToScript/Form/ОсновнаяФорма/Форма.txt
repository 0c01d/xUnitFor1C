
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Настраиваем первоначальные значения
	Объект.РазделятьКодНаПроцедуры = Истина;

	Объект.ВариантВстроенногоЯзыка = ? (Строка(Метаданные.ВариантВстроенногоЯзыка) = "Русский", "ru", "en");
	
	Элементы.ВариантВстроенногоЯзыка.СписокВыбора.Добавить("ru", НСтр("ru = 'Русский'"));
	Элементы.ВариантВстроенногоЯзыка.СписокВыбора.Добавить("en", НСтр("ru = 'Английский'"));

	Элементы.ПоискОбъектов.СписокВыбора.Добавить(0, НСтр("ru = 'По представлению'"));
	Элементы.ПоискОбъектов.СписокВыбора.Добавить(1, НСтр("ru = 'По имени'"));
	Элементы.ПоискОбъектов.СписокВыбора.Добавить(2, НСтр("ru = 'По имени и представлению'"));
	
	Элементы.ВариантПреобразования.СписокВыбора.Добавить(0, НСтр("ru = 'Журнал'"));
	Элементы.ВариантПреобразования.СписокВыбора.Добавить(1, НСтр("ru = 'Текст'"));
	Элементы.ВариантПреобразования.СписокВыбора.Добавить(2, НСтр("ru = 'Обработка xUnitFor1C'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Объект.ИмяОсновнойПроцедуры = "ТестовыйСценарий_" + ОчиститьДату(Формат(ТекущаяДата(), "ДЛФ=D"));
	
	Элементы.ИсходныеДанные.ТекущаяСтраница = ? ((Объект.ВариантПреобразования = 0 ИЛИ Объект.ВариантПреобразования = 2), Элементы.ИсходныеФайлы, Элементы.ИсходныеТексты);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// В зависимости от того, как нужно работать добавляем поля для проверки
	Если Объект.ВариантПреобразования = 0 ИЛИ Объект.ВариантПреобразования = 2 Тогда

		ПроверяемыеРеквизиты.Добавить("ИсходныйФайл");
		ПроверяемыеРеквизиты.Добавить("РезультирующийФайл");

	Иначе

		Если Не ЗначениеЗаполнено(ИсходныйТекст.ПолучитьТекст()) Тогда

			Отказ = Истина;

			НовоеСообщение = Новый СообщениеПользователю();
			НовоеСообщение.Текст = НСтр("ru = 'Поле ""Журнал действий пользователя"" не заполнено.'");
			НовоеСообщение.ПутьКДанным = "ИсходныйТекст";
			НовоеСообщение.Сообщить();

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элементов управления
&НаКлиенте
Процедура ВариантПреобразованияПриИзменении(Элемент)

	Элементы.ИсходныеДанные.ТекущаяСтраница = ? ((Объект.ВариантПреобразования = 0 ИЛИ Объект.ВариантПреобразования = 2), Элементы.ИсходныеФайлы, Элементы.ИсходныеТексты);

КонецПроцедуры

&НаКлиенте
Процедура ВариантВстроенногоЯзыкаОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ВариантВстроенногоЯзыкаПриИзменении(Элемент)

	Объект.ИмяОсновнойПроцедуры = ? (Объект.ВариантВстроенногоЯзыка = "ru", "ТестовыйСценарий_", "TestScenario_") + ОчиститьДату(Формат(ТекущаяДата(), "ДЛФ=D"));

КонецПроцедуры

&НаКлиенте
Процедура ИсходныйФайлПриНачалеВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	Диалог.ПолноеИмяФайла = ИсходныйФайл;
	Диалог.Заголовок = НСтр("ru = 'Укажите файл журнала действий пользователя'");
	Диалог.Фильтр = НСтр("ru = 'Файлы журнала действий пользователя (*.uil,*.txt,*.xml)|*.uil;*.txt;*.xml|Все файлы (*.*)|*.*'");
	Диалог.Расширение = "uil";

	Если Диалог.Выбрать() Тогда

		ИсходныйФайл = Диалог.ПолноеИмяФайла;

		Если Не ЗначениеЗаполнено(РезультирующийФайл) Тогда
			
			Если Объект.ВариантПреобразования = 0 Тогда 

				РезультирующийФайл = Лев(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.ПолноеИмяФайла) - СтрДлина(Диалог.Расширение)) + НСтр("ru = 'ТекстМодуля'") + ".txt";
				
			ИначеЕсли Объект.ВариантПреобразования = 2 Тогда 
				
				РезультирующийФайл = Лев(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.ПолноеИмяФайла) - СтрДлина(Диалог.Расширение)) + ".epf";
				
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсходныйФайлПриОткрытии(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ДокументПросмотра = Новый ТекстовыйДокумент();
	ДокументПросмотра.Прочитать(ИсходныйФайл);
	ДокументПросмотра.Показать(ИсходныйФайл);

КонецПроцедуры

&НаКлиенте
Процедура РезультирующийФайлПриНачалеВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);

	Диалог.ПолноеИмяФайла = РезультирующийФайл;
	Диалог.Заголовок = НСтр("ru = 'Укажите файл для сохранения результата преобразования'");
	Диалог.Фильтр= НСтр("ru = 'Текстовые файлы (*.txt)|*.txt|Все файлы (*.*)|*.*'");
	Если Объект.ВариантПреобразования = 2 Тогда 
		Диалог.Фильтр= НСтр("ru = 'Внешние обработки (*.epf)|*.epf|Все файлы (*.*)|*.*'");
	КонецЕсли;
	
	Если Диалог.Выбрать() Тогда

		ИсходныйФайл = Диалог.ПолноеИмяФайла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РезультирующийФайлПриОткрытии(Элемент, СтандартнаяОбработка)

	Если Объект.ВариантПреобразования = 0 Тогда 
		
		СтандартнаяОбработка = Ложь;

		ДокументПросмотра = Новый ТекстовыйДокумент();
		ДокументПросмотра.Прочитать(РезультирующийФайл);
		ДокументПросмотра.Показать(РезультирующийФайл);
		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции
&НаКлиенте
Функция ЭтоЦифра(Символ)

	Код = КодСимвола (Символ);
	Возврат Код >= 48 И Код <= 57;

КонецФункции

&НаКлиенте
Функция ЭтоБуква(Символ)

	// Считаем, что для небуквенных символов коды не отличаются
	Возврат КодСимвола(НРег(Символ)) <> КодСимвола(ВРег(Символ));

КонецФункции

&НаКлиенте
Функция ОчиститьДату(ДатаДляОчистки)

	Результат = "";

	ДлинаСтроки = СтрДлина(ДатаДляОчистки);
	Для Индекс = 1 To ДлинаСтроки Цикл
		СледующийСимвол = Сред(ДатаДляОчистки,Индекс, 1);
		Если ЭтоЦифра(СледующийСимвол) Тогда
			Результат = Результат + СледующийСимвол;
		Иначе
			Результат = Результат + "_";
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры преобразования
&НаСервере
Функция ПреобразоватьНаСервере(ТекстДляПреобразования)
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	Возврат ЭтаОбработка.Преобразовать(ТекстДляПреобразования);
	
КонецФункции

&НаСервере
Функция ПреобразоватьВоВнешнююОбработку(ТекстДляПреобразования)
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	СтрокаBase64 = ЭтаОбработка.СоздатьВнешнююОбработку(ТекстДляПреобразования);
	
	Возврат СтрокаBase64
		
КонецФункции


&НаКлиенте
Процедура Преобразовать(Команда)

	// Подготавливаем всё к преобразованию
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	ТекстДляПреобразования = "";
	Если Объект.ВариантПреобразования = 0 ИЛИ Объект.ВариантПреобразования = 2 Тогда

		Читатель = Новый ТекстовыйДокумент();
		Читатель.Прочитать(ИсходныйФайл);
		ТекстДляПреобразования = Читатель.ПолучитьТекст();
		Читатель = Неопределено;

	Иначе

		ТекстДляПреобразования = ИсходныйТекст.ПолучитьТекст();

	КонецЕсли;
	
	Если Объект.ВариантПреобразования = 2 Тогда 
		
		РезультатПреобразования = ПреобразоватьВоВнешнююОбработку(ТекстДляПреобразования);
	
	Иначе 
		
		РезультатПреобразования = ПреобразоватьНаСервере(ТекстДляПреобразования);
		
	КонецЕсли;

	Если Не ЗначениеЗаполнено(РезультатПреобразования) Тогда
		Сообщить(НСтр("ru = 'Не удалось выполнить преобразование'"));
		Возврат;
	КонецЕсли;

	Если Объект.ВариантПреобразования = 0 Тогда

		Писатель = Новый ТекстовыйДокумент();
		Писатель.ДобавитьСтроку(РезультатПреобразования);
		Писатель.Записать(РезультирующийФайл);
		Писатель.Показать(РезультирующийФайл);
		
	ИначеЕсли Объект.ВариантПреобразования = 2 Тогда 
		
		Попытка 
			ДвоичныеДанные = Base64Значение(РезультатПреобразования);
			ДвоичныеДанные.Записать(РезультирующийФайл);
		Исключение
			Сообщить("Не удалось сохранить base64 внешнией обработки в файл");
		КонецПопытки;

	Иначе

		РезультирующийТекст.Очистить();
		РезультирующийТекст.ДобавитьСтроку(РезультатПреобразования);

	КонецЕсли;

КонецПроцедуры

