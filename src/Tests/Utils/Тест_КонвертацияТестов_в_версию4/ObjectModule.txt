Перем КонтекстЯдра;
Перем Ожидаем;

Перем Конвертер;

//{ интерфейс тестирования

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ТестДолжен_ПолучитьУтилитуКонвертации", , "Получить утилиту конвертации");
	НаборТестов.Добавить("ТестДолжен_ПроверитьЧтоТекстНеМеняетсяЕслиВТекстеНетПолучитьСписокТестов", , "Проверить, что текст не меняется, если в тексте нет ""ПолучитьСписокТестов""");
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьПолучениеИмениПараметра_КонтекстЯдраИзОписанияМетода_ПолучитьСписокТестовДляПростейшегоБазовогоТеста", , "Получить имя параметра ""Контекст ядра"" из описания метода ""ПолучитьСписокТестов"" для простейшего базового теста");
	НаборТестов.Добавить("ТестДолжен_ПроверитьПолучениеТела_КонтекстЯдраИзОписанияМетода_ПолучитьСписокТестовДляПростейшегоБазовогоТеста", , "Получить тело из описания метода ""ПолучитьСписокТестов"" для простейшего базового теста");
	НаборТестов.Добавить("ТестДолжен_ПроверитьПолучениеИмениГлобальнойПеременнойКонтекстаЯдраДляПростейшегоБазовогоТеста", , "Получить имя глобальной переменной контекста ядра для простейшего базового теста");
	
	НаборТестов.Добавить("ТестДолжен_ПроверитьКонвертациюПростейшегоБазовогоТеста", , "Проверить конвертацию простейшего базового теста");
КонецПроцедуры

//}


//{ блок юнит-тестов - сами тесты

Процедура ПередЗапускомТеста() Экспорт
	Конвертер = ВнешниеОбработки.Создать(ПутьКонвертера(), Ложь);
	Конвертер.Инициализация(КонтекстЯдра);
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ПолучитьУтилитуКонвертации() Экспорт
	Ожидаем.Что(Конвертер, "Ожидали конвертера не равен Неопределено, а получили другое").ЭтоНе().Равно(Неопределено);
	//Ожидаем.Что(Конвертер, "Ожидали тип конвертера ""Внешняя обработка"", а получили другое").ИмеетТип("ВнешняяОбработка");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоТекстНеМеняетсяЕслиВТекстеНетПолучитьСписокТестов() Экспорт
	ИсходныйТекст = "Какой-то текст";
	
	ТекстРезультата = Конвертер.ПреобразоватьТекст(ИсходныйТекст);
	Ожидаем.Что(ТекстРезультата, "Ожидали, что текст результата будет равен образцу, а это не так").Равно("");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПолучениеИмениПараметра_КонтекстЯдраИзОписанияМетода_ПолучитьСписокТестовДляПростейшегоБазовогоТеста() Экспорт
	ИсходныйТекст = ПолучитьМакет("БазовыйТест_v3").ПолучитьТекст();
	
	ОписаниеМетода = Конвертер.ПолучитьОписаниеМетода_ПолучитьСписокТестов(ИсходныйТекст);
	
	Ожидаем.Что(ОписаниеМетода.ИмяПараметра_КонтекстЯдра, "Ожидали, что ОписаниеМетода.ИмяПараметра_КонтекстЯдра равен образцу, а это не так").Равно("ЮнитТестирование1");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПолучениеТела_КонтекстЯдраИзОписанияМетода_ПолучитьСписокТестовДляПростейшегоБазовогоТеста() Экспорт
	ИсходныйТекст = ПолучитьМакет("БазовыйТест_v3").ПолучитьТекст();
	
	ОписаниеМетода = Конвертер.ПолучитьОписаниеМетода_ПолучитьСписокТестов(ИсходныйТекст);
	
	Образец = "	юТест1 = ЮнитТестирование1;
	|	ВсеТесты1 = Новый Массив;
	|	ВсеТесты1.Добавить(""Тест_ДваПлюсДва"");
	|	Возврат ВсеТесты1;";
		
	Ожидаем.Что(ОписаниеМетода.ТелоМетода, "Ожидали, что тело метода равно образцу, а это не так").Равно(Образец);
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПолучениеИмениГлобальнойПеременнойКонтекстаЯдраДляПростейшегоБазовогоТеста() Экспорт
	ИсходныйТекст = ПолучитьМакет("БазовыйТест_v3").ПолучитьТекст();
	
	ОписаниеМетода = Конвертер.ПолучитьОписаниеМетода_ПолучитьСписокТестов(ИсходныйТекст);
	
	Сообщить("Лог <" + Символы.ПС + Конвертер.ПолучитьЛог() + Символы.ПС + ">");
	
	//ИмяГлобальнойПеременнойКонтекстаЯдра = Конвертер.ПолучитьИмяГлобальнойПеременнойКонтекстаЯдра(ИсходныйТекст, ОписаниеМетода.ИмяПараметра_КонтекстЯдра, ОписаниеМетода.ТелоМетода);
	ИмяГлобальнойПеременнойКонтекстаЯдра = ОписаниеМетода.ИмяГлобальнойПеременнойКонтекстаЯдра;
	
	
	Ожидаем.Что(ИмяГлобальнойПеременнойКонтекстаЯдра, "Ожидали, что ИмяГлобальнойПеременнойКонтекстаЯдра равно образцу, а это не так").Равно("юТест1");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКонвертациюПростейшегоБазовогоТеста() //Экспорт
	ИсходныйТекст = ПолучитьМакет("БазовыйТест_v3").ПолучитьТекст();
	ОбразецРезультата = ПолучитьМакет("БазовыйТест_v3_Результат").ПолучитьТекст();
	
	ТекстРезультата = Конвертер.ПреобразоватьТекст(ИсходныйТекст);
	
	Лог = Конвертер.ПолучитьЛог();
	Сообщить("Лог <" + Символы.ПС + Лог + Символы.ПС + ">");
	
	Ожидаем.Что(ТекстРезультата, "Ожидали, что текст результата будет равен образцу, а это не так").Равно(ОбразецРезультата);
КонецПроцедуры

Функция КаталогПроекта()
	Файл = Новый Файл(ИспользуемоеИмяФайла);
	Возврат Файл.Путь + "\..\..\";
КонецФункции

Функция ПутьКонвертера()
	Возврат КаталогПроекта() + "\utils\xddTestsConvertIntoRebornFormat.epf";
КонецФункции

//} 