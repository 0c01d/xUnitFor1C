Перем ПостроительДереваТестов;
Перем ИконкиУзловДереваТестов;
Перем ЗагрузчикФайла;

// { Plugin interface
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Тип", ВозможныеТипыПлагинов.Загрузчик);
	Результат.Вставить("Идентификатор", Метаданные().Имя);
	Результат.Вставить("Представление", "Загрузить тесты из конфигурации");
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
КонецФункции
// } Plugin interface

// { Loader interface
#Если ТолстыйКлиентОбычноеПриложение Тогда
Функция ВыбратьПутьИнтерактивно(ТекущийПуть = "") Экспорт
	ФормаВыбораПодсистем = ЭтотОбъект.ПолучитьФорму("ФормаВыбораПодсистемы");
	ФормаВыбораПодсистем.РежимВыбора = Истина;
	ФормаВыбораПодсистем.ОтборПоИмениТеста = "";
	ВыбранныйПуть = ФормаВыбораПодсистем.ОткрытьМодально();
	
	Возврат ВыбранныйПуть;
КонецФункции
#КонецЕсли

Функция Загрузить(КонтекстЯдра, Путь) Экспорт
	Перем ДеревоТестов;
	
	ПостроительДереваТестов = КонтекстЯдра.Плагин("ПостроительДереваТестов");
	ИконкиУзловДереваТестов = ПостроительДереваТестов.ИконкиУзловДереваТестов;
	ЗагрузчикФайла = КонтекстЯдра.Плагин("ЗагрузчикФайла");
	
	ОбъектМетаданных = ПолучитьОбъектМетаданныхПоПути(Путь);
	ДеревоТестов = ОбработатьОбъектМетаданных(ОбъектМетаданных);
	
	Возврат ДеревоТестов;
КонецФункции

Функция ПолучитьКонтекстПоПути(КонтекстЯдра, Путь) Экспорт
	ОбъектМетаданных = ПолучитьОбъектМетаданныхПоПути(Путь);
	Контекст = СоздатьОбработкуПоМетаданным(ОбъектМетаданных);
	
	Возврат Контекст;
КонецФункции
// } Loader interface

Функция ПолучитьОбъектМетаданныхПоПути(ПутьКОбъекту) Экспорт
	Перем ОбъектКонфигурации;
	Попытка
		Выполнить("ОбъектКонфигурации = " + ПутьКОбъекту);
	Исключение
		ВызватьИсключение "Передан невалидный путь <" + ПутьКОбъекту + ">";
	КонецПопытки;
	
	Возврат ОбъектКонфигурации;
КонецФункции

Функция ОбработатьОбъектМетаданных(ОбъектМетаданных)
	Если ЭтоПодсистема(ОбъектМетаданных) Тогда
		Контейнер = ЗагрузитьПодсистему(ОбъектМетаданных);
	Иначе
		Контейнер = ЗагрузитьОбработку(ОбъектМетаданных);
	КонецЕсли;
	
	Возврат Контейнер;
КонецФункции

Функция ЭтоПодсистема(ОбъектМетаданных)
	Возврат (Найти(нрег(ОбъектМетаданных.ПолноеИмя()), НРег("Подсистема")) > 0);
КонецФункции

Функция ЗагрузитьПодсистему(Подсистема)
	Контейнер = ПостроительДереваТестов.СоздатьКонтейнер(Подсистема.Имя, ИконкиУзловДереваТестов.Подсистема);
	Для каждого ПодчиненнаяПодсистема из Подсистема.Подсистемы цикл
		КонтейнерПодчиненнойПодсистемы = ЗагрузитьПодсистему(ПодчиненнаяПодсистема);
		Если КонтейнерПодчиненнойПодсистемы.Строки.Количество() > 0 Тогда
			Контейнер.Строки.Добавить(КонтейнерПодчиненнойПодсистемы);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ДочернееМетаданное из Подсистема.Состав цикл
		Если Метаданные.Обработки.Найти(ДочернееМетаданное.Имя) <> Неопределено Тогда
			КонтейнерСТестамиОбработки = ЗагрузитьОбработку(ДочернееМетаданное);
			Если КонтейнерСТестамиОбработки.Строки.Количество() > 0 Тогда
				Контейнер.Строки.Добавить(КонтейнерСТестамиОбработки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

Функция ЗагрузитьОбработку(МетаданныеОбработки)
	Обработка = СоздатьОбработкуПоМетаданным(МетаданныеОбработки);
	Попытка
		СписокТестов = Обработка.ПолучитьСписокТестов();
	Исключение
		Описание = ОписаниеОшибки();
		Если Найти(Описание, "Метод объекта не обнаружен (ПолучитьСписокТестов)") = 0 Тогда
			ВызватьИсключение Описание;
		КонецЕсли;
	КонецПопытки;
	Путь = СтрЗаменить("Метаданные." + МетаданныеОбработки.ПолноеИмя(), ".Обработка.", ".Обработки.");
	Контейнер = ЗагрузчикФайла.ПолучитьКонтейнерДереваТестовПоСпискуТестов(ПостроительДереваТестов, СписокТестов, МетаданныеОбработки.Имя, Путь);
	
	Возврат Контейнер;
КонецФункции

Функция СоздатьОбработкуПоМетаданным(МетаданныеОбработки)
	Возврат Обработки[МетаданныеОбработки.Имя].Создать();
КонецФункции
