Перем мЗначенияТиповСтроки;
Перем мМассивПиктограммТиповСтроки;

Процедура ПриОткрытии()
	ЗаполнитьДеревоПодсистем(ДеревоПодсистем, ОтборПоИмениТеста);
КонецПроцедуры

//{ Работа со встроенными в конфигурация тестами и подсистемами
Процедура ЗаполнитьДеревоПодсистем(ДеревоПодсистем, ОтборПоИмениТеста)
	Для каждого МетаПодсистема из Метаданные.Подсистемы цикл
		ДобавитьПодсистемуВДерево(МетаПодсистема, ДеревоПодсистем, ЭтотОбъект, ОтборПоИмениТеста);
	КонецЦикла;
КонецПроцедуры

Функция ДобавитьПодсистемуВДерево(ТекМетаПодсистема, РодительскаяСтрока, ОбработкаОбъект, ОтборПоИмениТеста)
	СтрокаПодсистемы = ПодчиненныеСтроки(РодительскаяСтрока).Добавить();
	СтрокаПодсистемы.Имя = ТекМетаПодсистема.Имя;
	СтрокаПодсистемы.Путь = "Метаданные."+СтрЗаменить(ТекМетаПодсистема.ПолноеИмя(), "Подсистема.", "Подсистемы.");
	СтрокаПодсистемы.ТипСтроки = мЗначенияТиповСтроки.Подсистема;
	Для Каждого Подсистема из ТекМетаПодсистема.Подсистемы Цикл 
		ДобавитьПодсистемуВДерево(Подсистема,СтрокаПодсистемы, ОбработкаОбъект, ОтборПоИмениТеста);
	КонецЦикла;
	
	Для каждого ОбъектМетаданных из ТекМетаПодсистема.Состав цикл
		Если Найти(ОбъектМетаданных.ПолноеИмя(), "Обработка."+ОтборПоИмениТеста) = 1 Тогда
			СтрокаТеста = ПодчиненныеСтроки(СтрокаПодсистемы).Добавить();
			СтрокаТеста.Имя = ОбъектМетаданных.Имя;
			СтрокаТеста.Путь = "Метаданные."+СтрЗаменить(ОбъектМетаданных.ПолноеИмя(), "Обработка.", "Обработки.");
			СтрокаТеста.ТипСтроки = мЗначенияТиповСтроки.ТестовыйСлучай;
		КонецЕсли;
	КонецЦикла;
	
	Если ПодчиненныеСтроки(СтрокаПодсистемы).Количество() = 0 Тогда
		ПодчиненныеСтроки(РодительскаяСтрока).Удалить(СтрокаПодсистемы);
	КонецЕсли;
	
КонецФункции

Функция ПодчиненныеСтроки(СтрокаДерева, РезЭтоСтрокаДереваУФ = Ложь) Экспорт
	РезЭтоСтрокаДереваУФ = ЭтоСтрокаДереваУФ(СтрокаДерева);
    Если Не РезЭтоСтрокаДереваУФ Тогда
        Строки = СтрокаДерева.Строки;
    Иначе
        Строки = СтрокаДерева.ПолучитьЭлементы();
	КонецЕсли;
	Возврат Строки;
КонецФункции

Функция ЭтоСтрокаДереваУФ(СтрокаДерева)
	Рез = Ложь;
    Если ТипЗнч(СтрокаДерева) = Тип("СтрокаДереваЗначений") ИЛИ ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
    ИначеЕсли ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыЭлементДерева") ИЛИ ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыДерево") Тогда
		Рез = Истина;
	КонецЕсли;
	Возврат Рез;
КонецФункции
//}

Процедура ДеревоПодсистемПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Имя.УстановитьКартинку(мМассивПиктограммТиповСтроки[ДанныеСтроки.ТипСтроки]);
КонецПроцедуры

Процедура ДеревоПодсистемВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ЭтаФорма.Закрыть(ВыбраннаяСтрока.Путь);
КонецПроцедуры

//{ Типы строк дерева тестов
мЗначенияТиповСтроки = Новый Структура;
мЗначенияТиповСтроки.Вставить("КаталогТестов", 0);
мЗначенияТиповСтроки.Вставить("ТестовыйСлучай", 1);
мЗначенияТиповСтроки.Вставить("ТестовыйМетод", 2);
мЗначенияТиповСтроки.Вставить("Подсистема", 3);
мЗначенияТиповСтроки.Вставить("Ошибка", 9);
мЗначенияТиповСтроки = Новый ФиксированнаяСтруктура(мЗначенияТиповСтроки);

мМассивПиктограммТиповСтроки = Новый Массив(4);
мМассивПиктограммТиповСтроки[мЗначенияТиповСтроки.ТестовыйСлучай]  = ЭлементыФормы.ПолеКартинкиТест.Картинка;
мМассивПиктограммТиповСтроки[мЗначенияТиповСтроки.Подсистема]      = ЭлементыФормы.ПолеКартинкиПодсистема.Картинка;
мМассивПиктограммТиповСтроки = Новый ФиксированныйМассив(мМассивПиктограммТиповСтроки);
//} Типы строк дерева тестов