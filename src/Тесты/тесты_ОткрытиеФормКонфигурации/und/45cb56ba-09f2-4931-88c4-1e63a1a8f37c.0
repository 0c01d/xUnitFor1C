{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем ЮТест;  // для тестирования

&НаКлиенте
Перем ТестируемаяФорма;

//{ основная процедура для юнит-тестирования 1CUnit
&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	СоздатьИменаОсновныхФорм();
	
	ТолькоУправляемыеФормы = Ложь;
	#Если ТонкийКлиент или ВебКлиент Тогда
		ТолькоУправляемыеФормы = Истина;
	#КонецЕсли
	
	Объект.ВыводитьСообщенияВЖурналРегистрации = Истина;
	
	имяТеста = ""ТестДолжен_ОткрытьФормуПоПолномуИмениФормы"";

	CписокИменМетаФорм = СписокИменМетаФормСервер(""Метаданные.Справочники"", ТолькоУправляемыеФормы);
	ДобавитьТестМетаФормы(ВсеТесты, CписокИменМетаФорм, имяТеста);
	
	CписокИменМетаФорм = СписокИменМетаФормСервер(""Метаданные.Документы"", ТолькоУправляемыеФормы);
	ДобавитьТестМетаФормы(ВсеТесты, CписокИменМетаФорм, имяТеста);
	
	CписокИменМетаФорм = СписокИменМетаФормСервер(""Метаданные.Обработки"", ТолькоУправляемыеФормы);
	ДобавитьТестМетаФормы(ВсеТесты, CписокИменМетаФорм, имяТеста);
	
	CписокИменМетаФорм = СписокИменМетаФормСервер(""Метаданные.Отчеты"", ТолькоУправляемыеФормы);
	ДобавитьТестМетаФормы(ВсеТесты, CписокИменМетаФорм, имяТеста);

	//ВсеТесты.Добавить(""ТестДолжен_ОткрытьУправляемуюФорму_Обработки_ПоказатьГУИД"");
	//ВсеТесты.Добавить(""ТестДолжен_ОткрытьУправляемуюФорму_Обработок"");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ ОСНОВНОЙ БЛОК

//} КОНЕЦ ОСНОВНОГО БЛОКА

//{ БЛОК ЮНИТ-ТЕСТОВ - сами тесты

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	Предупреждение(""Спец.окно для для показа сообщений из тестов. Таймаут 1 секунда"",1); // нужно для показа сообщений из теста, иначе не будут показаны
	
	ОбновитьПовторноИспользуемыеЗначения();
	//ЮТест.ВывестиСообщение(""Перед запуском теста"");
	//НачатьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	//Если ТранзакцияАктивна() Тогда
	//	ОтменитьТранзакцию();
	//КонецЕсли;
	//ЮТест.ВывестиСообщение(""После запуска теста"");
	
	ЗакрытьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	//Если ТипЗнч(ТестируемаяФорма) <> Тип(""Форма"") и ТипЗнч(ТестируемаяФорма) <> Тип(""УправляемаяФорма"") Тогда
	Если ТипЗнч(ТестируемаяФорма) <> Тип(""УправляемаяФорма"") Тогда
		Возврат;
	КонецЕсли; 
	ТестируемаяФорма.Модифицированность = Ложь;
	Если ТестируемаяФорма.Открыта() Тогда
		ТестируемаяФорма.Модифицированность = Ложь;
		//Попытка
			ТестируемаяФорма.Закрыть();
		//Исключение
		//	Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		//	ЗакрытьФормуБезусловноСОтменойТранзакции(ТестируемаяФорма);
		//	//Если ТранзакцияАктивна() Тогда
		//	//	ОтменитьТранзакцию();
		//	//КонецЕсли;
		//	//	//ДобавитьСтрокуРезультата(ИмяОперации, ИнформацияОбОшибке());
		//	//НачатьТранзакцию();
		//	//ТестируемаяФорма.УстановитьДействие(""ПередЗакрытием"", Неопределено);
		//	//ТестируемаяФорма.УстановитьДействие(""ПриЗакрытии"", Неопределено);
		//	//ТестируемаяФорма.Закрыть();
		//	ВызватьИсключение Ошибка; 			
		//КонецПопытки;
	Иначе
		Попытка
			ТестируемаяФорма.Закрыть();
		Исключение
		КонецПопытки;
	КонецЕсли;
	ТестируемаяФорма = """";

КонецПроцедуры

//&НаКлиенте
//Процедура ТестДолжен_ОткрытьУправляемуюФорму_Обработки_ПоказатьГУИД() Экспорт
//	ПолноеИмяФормы = ""Обработка.ПоказатьГУИД.Форма.Форма"";
//	ТестируемаяФорма = ОткрытьФорму(ПолноеИмяФормы);
//КонецПроцедуры

//&НаКлиенте
//Процедура ТестДолжен_ОткрытьУправляемуюФорму_Обработок() Экспорт
//	СоздатьИменаОсновныхФорм();
//	CписокИменМетаФорм = СписокИменМетаФормСервер(""Метаданные.Обработки"", );
//	Для каждого Элемент Из CписокИменМетаФорм  Цикл
//		ПолноеИмяФормы = Элемент.Значение;
//		//Сообщить(""ПолноеИмяФормы <""+ПолноеИмяФормы+""> "");
//		ТестируемаяФорма = ОткрытьФорму(ПолноеИмяФормы);
//	КонецЦикла;
////	Выполнить("""");
////	ДобавитьТестПоМенеджеруМетаданных(ВсеТесты, Метаданные.Обработки, ""ТестДолжен_ОткрытьФорму_ПоМетаФорме"", ПолучитьСписокИсключений_Обработки(), мИменаОсновныхФорм);
//КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ОткрытьФормуПоПолномуИмениФормы(ПолноеИмяФормы) Экспорт
	Если Объект.ВыводитьСообщенияВЖурналРегистрации Тогда
		ВыполнитьЗаписьВЖурналРегистрации(ПолноеИмяФормы);
	КонецЕсли;
	
	КлючВременнойФормы = ""908насмь9ыв3245"";
	ТестируемаяФорма = ОткрытьФорму(ПолноеИмяФормы,,,КлючВременнойФормы);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаписьВЖурналРегистрации(ПолноеИмяФормы)
	ЗаписьЖурналаРегистрации(Объект().Метаданные().Синоним, УровеньЖурналаРегистрации.Информация, , , ""Операция: "" + ПолноеИмяФормы);
КонецПроцедуры

Процедура СоздатьИменаОсновныхФорм()
	ОсновнойОбъект = Объект();
	ОсновнойОбъект.СоздатьИменаОсновныхФорм();
	ЗначениеВРеквизитФормы(ОсновнойОбъект, ""Объект"");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТестМетаФормы(ВсеТесты, CписокИменМетаФорм, имяТеста)
	Для каждого Элемент Из CписокИменМетаФорм  Цикл
		МетаФорма_ПолноеИмя = Элемент.Значение;
		ПредставлениеТеста = МетаФорма_ПолноеИмя;
		лПараметры = Новый Структура(""ПредставлениеТеста,ИмяТеста,Транзакция,Параметр"", ПредставлениеТеста, имяТеста, Истина, МетаФорма_ПолноеИмя);
		ВсеТесты.Добавить(лПараметры);
	КонецЦикла;
КонецПроцедуры

//&НаСервере
Функция СписокИменМетаФормСервер(ВыражениеВычисленияМенеджераМетаданных, ТолькоУправляемыеФормы)
	менеджерМетаданного = Неопределено;
	Выполнить(""менеджерМетаданного = ""+ВыражениеВычисленияМенеджераМетаданных);//Метаданные.Обработки;
	ОсновнойОбъект = Объект();
	CписокИменМетаФорм = ПолучитьСписокИменМетаФормПоМенеджеруМетаданных(менеджерМетаданного, ОсновнойОбъект, ТолькоУправляемыеФормы, ОсновнойОбъект.ПолучитьСписокИсключений_Обработки(), ОсновнойОбъект.мИменаОсновныхФорм);
	Возврат CписокИменМетаФорм;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокИменМетаФормПоМенеджеруМетаданных(менеджерМетаданного, ОсновнойОбъект, ТолькоУправляемыеФормы, списокИсключений, ИменаОсновныхФорм)
	CписокИменМетаФорм = Новый СписокЗначений;
	Для Каждого МетаОбъект Из менеджерМетаданного Цикл
		Если МетаОбъект.Имя = ""UnitTestRunner"" Тогда
			Продолжить;
		КонецЕсли;
		ДобавитьИмяМетаФормыДляМетаданного_ОдинОбъект(CписокИменМетаФорм, ОсновнойОбъект, МетаОбъект, ТолькоУправляемыеФормы, списокИсключений, ИменаОсновныхФорм);
	КонецЦикла;
	Возврат CписокИменМетаФорм;
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьИмяМетаФормыДляМетаданного_ОдинОбъект(CписокИменМетаФорм, ОсновнойОбъект, МетаОбъект, ТолькоУправляемыеФормы, списокИсключений, ИменаОсновныхФорм)
	Если списокИсключений.НайтиПоЗначению(МетаОбъект.Имя) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ПравоДоступа(""Просмотр"", МетаОбъект) Тогда
		МетаФормы = ОсновнойОбъект.ПолучитьМетаФормыОбъектаДляПроверки(МетаОбъект, ИменаОсновныхФорм);

		Для каждого МетаФорма Из МетаФормы Цикл
			МетаФорма_ПолноеИмя = МетаФорма.ПолноеИмя();
			//Сообщить(""МетаФорма_ПолноеИмя <""+МетаФорма_ПолноеИмя+""> "");
			
			Если ТолькоУправляемыеФормы Тогда
				//Сообщить(""МетаФорма.ТипФормы <""+МетаФорма.ТипФормы+""> "");
				Если Не ЭтоУправляемаяФорма(МетаФорма) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		
		CписокИменМетаФорм.Добавить(МетаФорма_ПолноеИмя);
			//ПредставлениеТеста = МетаФорма_ПолноеИмя;
			//лПараметры = Новый Структура(""ПредставлениеТеста,ИмяТеста,Транзакция,Параметр"", ПредставлениеТеста, имяТеста, Истина, МетаФорма_ПолноеИмя);
			//ВсеТесты.Добавить(лПараметры);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоУправляемаяФорма(МетаФорма)
	Возврат МетаФорма <> Неопределено И МетаФорма.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Управляемая;
КонецФункции

Функция Объект()
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции

//} КОНЕЦ БЛОКА ЮНИТ-ТЕСТОВ
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",d7763d54-e3e8-4427-b006-786d44023817}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}